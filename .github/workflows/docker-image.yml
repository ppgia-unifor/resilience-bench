name: Build & publish images

on:
   push:
     branches: [ "main" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v6
          - linux/arm/v7
          - linux/arm64/v8
          - linux/arm64
        include:
          - dockerfile: ./server/Dockerfile
            image: ghcr.io/ppgia-unifor/resilience-bench-server
            context: ./server
          - dockerfile: ./scheduler/Dockerfile
            image: ghcr.io/ppgia-unifor/resilience-bench-scheduler
            context: ./scheduler
          - dockerfile: ./clients/polly/Dockerfile
            image: ghcr.io/ppgia-unifor/resilience-bench-polly-client
            context: ./clients/polly
          - dockerfile: ./clients/resilience4j/Dockerfile
            image: ghcr.io/ppgia-unifor/resilience-bench-r4j-client
            context: ./clients/resilience4j
          - dockerfile: ./clients/cockatiel/Dockerfile
            image: ghcr.io/ppgia-unifor/resilience-bench-cockatiel-client
            context: ./clients/cockatiel
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
          flavor: latest=true

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ matrix.context }}
          platforms: ${{ matrix.platform }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}